# This is a basic workflow to help you get started with Actions

name: Java CI with Gradle
on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

  sonarQubeTrigger:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@master
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.1.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
        projectBaseDir: ${{ env.working-directory }}
        projectKey: "TestProject"
        projectName: "TestProject"
        projectVersion: "v0.0.1"
        
    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v3
    - name: Run sonarqube
      env:
        # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: sonar-scanner
           -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
           -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
           -Dsonar.projectKey=TestProject
           -Dsonar.projectName=TestProject
           -Dsonar.projectVersion=v0.0.1
           -Dsonar.sources=${{ env.working-directory }}/src/main
           -Dsonar.tests=${{ env.working-directory }}/src/test
           -Dsonar.java.binaries=${{ env.working-directory }}/build/classes/main
           -Dsonar.java.test.binaries=${{ env.working-directory }}/build/classes/test
           -Dsonar.jacoco.reportPaths=${{ env.working-directory }}/build/reports/jacoco/test
